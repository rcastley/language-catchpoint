scopeName: 'source.cps'
fileTypes: ['cps']
name: 'Catchpoint Selenium Script'
patterns: [
  {
    begin: '^//'
    end: '\\n'
    name: 'comment.line.double-slash.cps'
  }
  {
#    begin: '(?i)(assertHtmlSource|assertHttpResponseCode|assertHttpResponseHeader|assertNotHtmlSource|assertNotHttpResponseCode|assertNotHttpResponseHeader|assert|open|openWhile|pause|setHeaderAll|setHeader|setIndicator|setNavigatePostData|setStepName|setTracepoint|storeGlobalVariable|storeVariable|verifyHtmlSource|verifyHttpResponseCode|verifyHttpResponseHeader|verifyNotHtmlSource|verifyNotHttpResponseCode|verifyNotHttpResponseHeader|verify|waitForNoRequest|clickAndWait|click)'
    begin: '([a-zA-Z0-9]+)\\('
    end: '\\n'
    captures:
      '1':
        name: 'verb'
    patterns: [
      {
        include: '#macros'
      }
      {
        include: '#strings'
      }
    ]
  }
  {
    include: 'text.hyperlink'
  }
  {
    include: 'text.xml'
  }
  {
    include: '#macros'
  }
  {
    begin: '(?i)(var)\\s*(\\w+)\\s*'
    end: '\\n'
    name: 'verb'
    captures:
      '2':
        name: 'storage.type.var.cps'
    patterns: [
      {
        include: '#strings'
      }
      {
        include: '#macros'
      }
    ]
  }
]

repository:
  macros:
    patterns: [
      {
        match: '(\\$\\{)([a-zA-Z0-9]+)([(]?)|(\\)?)(\\})'
        name: 'entity.name.function.cps'
        captures:
          '2':
            name: 'macro'
      }
    ]
  strings:
    patterns: [
      {
        begin: '"'
        beginCaptures:
          '0':
            name: 'punctuation.definition.string.begin.cps'
        end: '"'
        endCaptures:
          '0':
            name: 'punctuation.definition.string.end.cps'
        name: 'string.quoted.double.cps'
        patterns: [
          {
            include: '#macros'
          }
        ]
      }
      {
        begin: '\\\\\"'
        beginCaptures:
          '0':
            name: 'punctuation.definition.string.begin.cps'
        end: '\\\\\"'
        endCaptures:
          '0':
            name: 'punctuation.definition.string.end.cps'
        name: 'string.quoted.double.cps'
      }
      {
        begin: '\''
        beginCaptures:
          '0':
            name: 'punctuation.definition.string.begin.cps'
        end: '\''
        endCaptures:
          '0':
            name: 'punctuation.definition.string.end.cps'
        name: 'string.quoted.single.cps'
        patterns: [
          {
            include: '#macros'
          }
        ]
      }
    ]
