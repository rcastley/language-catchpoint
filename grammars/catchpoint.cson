scopeName: 'source.cps'
fileTypes: ['cps']
name: 'Catchpoint Selenium Script'
patterns: [
    {    
        begin: '^//'
        end: '\\n'
        name: 'comment.line.double-slash.cps'
    }
    {
        match: '(\\")'
        name: 'string.quoted.double.cps'
    }
    {
        match: '(?i)(assertHtmlSource|assertHttpResponseCode|assertHttpResponseHeader|assertNotHtmlSource|assertNotHttpResponseCode|assertNotHttpResponseHeader|assert|open|openWhile|pause|setHeaderAll|setHeader|setIndicator|setNavigatePostData|setStepName|setTracepoint|storeGlobalVariable|storeVariable|verify|verifyHtmlSource|verifyHttpResponseCode|verifyHttpResponseHeader|verifyNotHtmlSource|verifyNotHttpResponseCode|verifyNotHttpResponseHeader)'
        name: 'markup.bold.cps'
    }
    {
        include: 'text.hyperlink'
    }
    {
        include: 'text.xml'
    }
    {
        captures:
            '1':
                name: 'keyword.other.cps'
            '3':
                name: 'keyword.other.cps'
        match: '(?i)(\\$\\{(AsnName|AsnValue|Base64|CityId|CityName|ContinentName|CountryName|Extract|ExtractChild|ExtractVariable|File|GlobalVariable|Hash|Hex|HostRequestAuthority|HostRequestHost|HostRequestPath|HostRequestPathAndQuery|HostRequestQuery|HostRequestUrl|If|IpVersion|IspId|IspName|LocationId|LocationLatitude|LocationLongitude|LocationName|NetworkType|Password|Random|RandomGuid|RandomList|RegionName|SequentialList|SequentialListByLocation|SequentialListByRun|Switch|TestId|Time|TimeDay|TimeDiff|TimeEpoch|TimeFormat|TimeTrim|UrlDecode|UrlEncode|UserName|var)\\(?).*?(\\)\\})'
        name: 'string.quoted.double.cps'
    }
    {
        captures:
            '1':
                name: 'keyword.control.cps'
            '2':
                name: 'variable.language.default.cps'    
        match: '(?i)(var)\\s*(\\w+)\\s+'
        name: 'keyword.control.cps'
    }
]
